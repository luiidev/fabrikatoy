.font-weight-medium {
  font-weight: 500;
}

.text-left {
  text-align: left !important;
}

.text-right {
  text-align: right !important;
}

.btn-link {
  cursor: pointer;
}

.height-0 {
  height: 0;
}

.line-height-1 {
  line-height: 1;
}

.row-border-bottom-0 td {
  border-bottom: 0;
}

.ps {
  overflow: hidden!important;
  overflow-anchor: none;
  touch-action: auto;
}

.mr-5 {
  margin-right: 5px;
}

.mr-10 {
  margin-right: 10px;
}

.mr-15 {
  margin-right: 15px;
}

.ml-5 {
  margin-left: 5px;
}

.ml-10 {
  margin-left: 10px;
}

.ml-15 {
  margin-left: 15px;
}

// Width list
@mixin width-x-list {
  @for $i from 1 through 25 {
    .w#{$i}0 { width: #{$i}0px; }
  }
}
@include width-x-list;
[data-theme=dark] {
  .table {
    --#{$variable-prefix}table-bg: #{$table-bg};
    --#{$variable-prefix}table-accent-bg: #{$table-accent-bg};
    --#{$variable-prefix}table-striped-color: #{$table-striped-color};
    --#{$variable-prefix}table-striped-bg: #{$table-striped-bg};
    --#{$variable-prefix}table-active-color: #{$table-active-color};
    --#{$variable-prefix}table-active-bg: #{$table-active-bg};
    --#{$variable-prefix}table-hover-color: $text-dark;
    --#{$variable-prefix}table-hover-bg: $bg-dark-2;
  }
}

.table > :not(caption) > * > * {
  padding: 0.6rem 0.7rem;
}

.table thead th, .table th {
  line-height: 1;
}

.table > :not(:first-child) {
  border-top: none;
}

.mat-icon-button {
  margin: 0 2px !important;
}

.text-sm {
  font-size: 0.9rem;
}

.table.table-sm > :not(caption) > * > * {
  padding: 0.5rem 0.5rem;
  font-size: 0.9rem;
}

.flex-flow-wrap {
  flex-flow: wrap;
}

.z-index-backdrop-warn {
  z-index: 1500 !important;
}

.z-index-window-warn {
  z-index: 1550 !important;
}

.z-index-backdrop-level-2 {
  z-index: 1200 !important;
}

.z-index-window-level-2 {
  z-index: 1250 !important;
}

.z-index-backdrop-level-3 {
  z-index: 1300 !important;
}

.z-index-window-level-3 {
  z-index: 1350 !important;
}

.pointer {
  cursor: pointer;
}

.not-events {
  pointer-events: none;
  opacity: .5;
}

.not-events-only {
  pointer-events: none;
}

ngb-typeahead-window {
  padding: 0 !important;
  button {
    padding: 5px 10px !important;
    color: #fff !important;
  }
}

/* Hide the default checkbox */
.checkbox-group {
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;

  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  /* When the checkbox is checked, add a blue background */
  input:checked ~ .checkmark {
    background-color: $bg-dark-2;
    animation: pop 0.5s;
    animation-direction: alternate;
  }

  /* Show the checkmark when checked */
  input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  .checkmark:after {
    left: 0.4em;
    top: 0.2em;
    width: 0.25em;
    height: 0.5em;
    border: solid white;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
  }

  span {
    font-size: 1rem;
    margin-left: 10px;
  }
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1em;
  width: 1em;
  background-color: #ccc;
  transition: all 0.3s;
  border-radius: 5px;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

@keyframes pop {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
  }
}
